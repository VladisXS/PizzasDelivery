let currentLanguage = 'uk';
let order = [];
let totalPrice = 0;
let orderHistory = [];

const exchangeRate = 40; // 1 EUR = 40 UAH

const pizzas = [
    { id: 1, name: '–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', nameEn: 'Margherita', category: 'vegetarian', price: 120, rating: 4.5, image: 'https://images.unsplash.com/photo-1574071318508-1cdbab80d002?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80' },
    { id: 2, name: '–ü–µ–ø–µ—Ä–æ–Ω—ñ', nameEn: 'Pepperoni', category: 'meat', price: 150, rating: 4.7, image: 'https://images.unsplash.com/photo-1593504049359-74330189a345?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80' },
    { id: 3, name: '–ì–∞–≤–∞–π—Å—å–∫–∞', nameEn: 'Hawaiian', category: 'meat', price: 130, rating: 4.2, image: 'https://images.unsplash.com/photo-1601924582970-9238bcb495d9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80' },
    { id: 4, name: '4 —Å–∏—Ä–∏', nameEn: '4 Cheeses', category: 'vegetarian', price: 140, rating: 4.8, image: 'https://images.unsplash.com/photo-1579751626657-72bc17010498?ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80' }
];

const translations = {
    'uk': {
        'headerTitle': 'üçï –î–æ—Å—Ç–∞–≤–∫–∞ –ø—ñ—Ü–∏',
        'menu': '–ú–µ–Ω—é',
        'about': '–ü—Ä–æ –Ω–∞—Å',
        'contact': '–ö–æ–Ω—Ç–∞–∫—Ç–∏',
        'history': '–Ü—Å—Ç–æ—Ä—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
        'menuTitle': '–ù–∞—à–µ –º–µ–Ω—é',
        'order': '–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
        'total': '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞',
        'place_order': '–ó–∞–∫–∞–∑–∞—Ç–∏',
        'delivery_message': '–î—è–∫—É—î–º–æ! –í–∞—à–∞ –ø—ñ—Ü–∞ –±—É–¥–µ –≥–æ—Ç–æ–≤–∞ —Ç–∞ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∞ –∑–∞ 30-35 —Ö–≤–∏–ª–∏–Ω.',
        'name_placeholder': '–í–∞—à–µ —ñ–º\'—è',
        'address_placeholder': '–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏',
        'notes_placeholder': '–î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ–±–∞–∂–∞–Ω–Ω—è (–Ω–µ –æ–±–æ–≤\'—è–∑–∫–æ–≤–æ)',
        'order_button': '–ó–∞–º–æ–≤–∏—Ç–∏',
        'orderFormTitle': '–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
        'aboutTitle': '–ü—Ä–æ –Ω–∞—Å',
        'aboutText': '–ú–∏ - –ø—ñ—Ü–µ—Ä—ñ—è, —è–∫–∞ –≥–æ—Ç—É—î –Ω–∞–π—Å–º–∞—á–Ω—ñ—à—É –ø—ñ—Ü—É –∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω–∏—Ö —ñ–Ω–≥—Ä–µ–¥—ñ—î–Ω—Ç—ñ–≤. –ù–∞—à–∞ –º—ñ—Å—ñ—è - –¥–∞—Ä—É–≤–∞—Ç–∏ –≤–∞–º —Ä–∞–¥—ñ—Å—Ç—å —ñ –∑–∞–¥–æ–≤–æ–ª–µ–Ω–Ω—è –≤—ñ–¥ –∫–æ–∂–Ω–æ–≥–æ —à–º–∞—Ç–æ—á–∫–∞!',
        'contactTitle': '–ö–æ–Ω—Ç–∞–∫—Ç–∏',
        'addressText': 'üè† –ê–¥—Ä–µ—Å–∞: –≤—É–ª. –ü—ñ—Ü–µ—Ä—ñ–π–Ω–∞, 1, –º. –ö–∏—ó–≤',
        'historyTitle': '–Ü—Å—Ç–æ—Ä—ñ—è –∑–∞–º–æ–≤–ª–µ–Ω—å',
        'footerText': '¬© 2023 –î–æ—Å—Ç–∞–≤–∫–∞ –ø—ñ—Ü–∏. –£—Å—ñ –ø—Ä–∞–≤–∞ –∑–∞—Ö–∏—â–µ–Ω—ñ.',
        'clear_order': '–û—á–∏—Å—Ç–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è',
        'remove': '–í–∏–¥–∞–ª–∏—Ç–∏',
        'search_placeholder': '–ü–æ—à—É–∫ –ø—ñ—Ü–∏...',
        'price': '–¶—ñ–Ω–∞',
        'rating': '–†–µ–π—Ç–∏–Ω–≥'
    },
    'en': {
        'headerTitle': 'üçï Pizza Delivery',
        'menu': 'Menu',
        'about': 'About Us',
        'contact': 'Contact',
        'history': 'Order History',
        'menuTitle': 'Our Menu',
        'order': 'Your Order',
        'total': 'Total',
        'place_order': 'Order',
        'delivery_message': 'Thank you! Your pizza will be ready and delivered in 30-35 minutes.',
        'name_placeholder': 'Your Name',
        'address_placeholder': 'Delivery Address',
        'notes_placeholder': 'Additional Notes (optional)',
        'order_button': 'Place Order',
        'orderFormTitle': 'Place Order',
        'aboutTitle': 'About Us',
        'aboutText': 'We are a pizzeria that prepares the most delicious pizza from natural ingredients. Our mission is to give you joy and pleasure with every bite!',
        'contactTitle': 'Contact',
        'addressText': 'üè† Address: Pizza Street, 1, Kyiv',
        'historyTitle': 'Order History',
        'footerText': '¬© 2023 Pizza Delivery. All rights reserved.',
        'clear_order': 'Clear Order',
        'remove': 'Remove',
        'search_placeholder': 'Search pizza...',
        'price': 'Price',
        'rating': 'Rating'
    }
};

function toggleLanguageDropdown() {
    const dropdown = document.getElementById('language-dropdown');
    dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
}

function toggleFilterDropdown() {
    const dropdown = document.getElementById('filter-dropdown');
    dropdown.style.display = dropdown.style.display === 'block' ? 'none' : 'block';
}

function changeLanguage(lang) {
    currentLanguage = lang;
    updateLanguage();
    renderPizzas(pizzas);
    updateOrderList();
}

function updateLanguage() {
    document.getElementById('headerTitle').textContent = translations[currentLanguage]['headerTitle'];
    document.getElementById('menuLink').textContent = translations[currentLanguage]['menu'];
    document.getElementById('aboutLink').textContent = translations[currentLanguage]['about'];
    document.getElementById('contactLink').textContent = translations[currentLanguage]['contact'];
    document.getElementById('historyLink').textContent = translations[currentLanguage]['history'];
    document.getElementById('menuTitle').textContent = translations[currentLanguage]['menuTitle'];
    document.getElementById('orderTitle').textContent = translations[currentLanguage]['order'];
    document.getElementById('totalText').innerHTML = `${translations[currentLanguage]['total']}: <span id="totalPrice">0</span>`;
    document.getElementById('orderButton').textContent = translations[currentLanguage]['place_order'];
    document.getElementById('deliveryMessage').textContent = translations[currentLanguage]['delivery_message'];
    document.getElementById('name').placeholder = translations[currentLanguage]['name_placeholder'];
    document.getElementById('address').placeholder = translations[currentLanguage]['address_placeholder'];
    document.getElementById('notes').placeholder = translations[currentLanguage]['notes_placeholder'];
    document.getElementById('placeOrderButton').textContent = translations[currentLanguage]['order_button'];
    document.getElementById('orderFormTitle').textContent = translations[currentLanguage]['orderFormTitle'];
    document.getElementById('aboutTitle').textContent = translations[currentLanguage]['aboutTitle'];
    document.getElementById('aboutText').textContent = translations[currentLanguage]['aboutText'];
    document.getElementById('contactTitle').textContent = translations[currentLanguage]['contactTitle'];
    document.getElementById('addressText').textContent = translations[currentLanguage]['addressText'];
    document.getElementById('historyTitle').textContent = translations[currentLanguage]['historyTitle'];
    document.getElementById('footerText').textContent = translations[currentLanguage]['footerText'];
    document.getElementById('clearOrderButton').textContent = translations[currentLanguage]['clear_order'];
    document.getElementById('searchInput').placeholder = translations[currentLanguage]['search_placeholder'];

    const priceElements = document.querySelectorAll('.menu-item p:nth-child(2)');
    const ratingElements = document.querySelectorAll('.menu-item p:nth-child(3)');
    priceElements.forEach(el => el.textContent = `${translations[currentLanguage]['price']}: `);
    ratingElements.forEach(el => el.textContent = `${translations[currentLanguage]['rating']}: `);
}

function filterPizzas(category) {
    const filteredPizzas = category === 'all' ? pizzas : pizzas.filter(pizza => pizza.category === category);
    renderPizzas(filteredPizzas);
}

function searchPizzas() {
    const searchTerm = document.getElementById('searchInput').value.toLowerCase();
    const filteredPizzas = pizzas.filter(pizza => {
        const pizzaName = currentLanguage === 'uk' ? pizza.name.toLowerCase() : pizza.nameEn.toLowerCase();
        return pizzaName.includes(searchTerm);
    });
    renderPizzas(filteredPizzas);
}

function renderPizzas(pizzas) {
    const pizzaList = document.getElementById('pizzaList');
    pizzaList.innerHTML = '';
    pizzas.forEach(pizza => {
        const pizzaName = currentLanguage === 'uk' ? pizza.name : pizza.nameEn;
        const price = currentLanguage === 'uk' ? `${pizza.price} –≥—Ä–Ω` : `‚Ç¨${(pizza.price / exchangeRate).toFixed(2)}`;
        pizzaList.innerHTML += `
            <div class="menu-item" onclick="addPizzaToOrder(${pizza.id}, ${pizza.price})">
                <img src="${pizza.image}" alt="${pizzaName}">
                <div>
                    <h3>${pizzaName}</h3>
                    <p>${translations[currentLanguage]['price']}: ${price}</p>
                    <p>${translations[currentLanguage]['rating']}: ${pizza.rating}</p>
                    <div class="rating">
                        <span onclick="ratePizza(this, 1, event)">‚òÖ</span>
                        <span onclick="ratePizza(this, 2, event)">‚òÖ</span>
                        <span onclick="ratePizza(this, 3, event)">‚òÖ</span>
                        <span onclick="ratePizza(this, 4, event)">‚òÖ</span>
                        <span onclick="ratePizza(this, 5, event)">‚òÖ</span>
                    </div>
                </div>
            </div>
        `;
    });
}

function addPizzaToOrder(pizzaId, price) {
    const pizza = pizzas.find(p => p.id === pizzaId);
    const existingPizza = order.find(item => item.id === pizzaId);
    if (existingPizza) {
        existingPizza.quantity += 1;
    } else {
        order.push({ id: pizzaId, price: price, quantity: 1 });
    }
    totalPrice += price;
    updateOrderList();
    document.getElementById('orderButton').style.display = 'block';
}

function removeOnePizzaFromOrder(index) {
    const pizza = order[index];
    if (pizza.quantity > 1) {
        pizza.quantity -= 1;
        totalPrice -= pizza.price;
    } else {
        order.splice(index, 1);
        totalPrice -= pizza.price;
    }
    updateOrderList();
    if (order.length === 0) {
        document.getElementById('orderButton').style.display = 'none';
    }
}

function removePizzaFromOrder(index) {
    if (confirm(currentLanguage === 'uk' ? '–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—é –ø—ñ—Ü—É –∑ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?' : 'Are you sure you want to remove this pizza from the order?')) {
        const removedPizza = order[index];
        totalPrice -= removedPizza.price * removedPizza.quantity;
        order.splice(index, 1);
        updateOrderList();
        if (order.length === 0) {
            document.getElementById('orderButton').style.display = 'none';
        }
    }
}

function clearOrder() {
    if (confirm(currentLanguage === 'uk' ? '–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –æ—á–∏—Å—Ç–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è?' : 'Are you sure you want to clear the order?')) {
        order = [];
        totalPrice = 0;
        updateOrderList();
        document.getElementById('orderButton').style.display = 'none';
        document.getElementById('clearOrderButton').style.display = 'none';
    }
}

function updateOrderList() {
    const orderItems = document.getElementById('orderItems');
    const totalPriceElement = document.getElementById('totalPrice');
    const clearOrderButton = document.getElementById('clearOrderButton');
    orderItems.innerHTML = '';
    order.forEach((item, index) => {
        const pizza = pizzas.find(p => p.id === item.id);
        const pizzaName = currentLanguage === 'uk' ? pizza.name : pizza.nameEn;
        const price = currentLanguage === 'uk' ? item.price * item.quantity : (item.price / exchangeRate) * item.quantity;
        const currencySymbol = currentLanguage === 'uk' ? '–≥—Ä–Ω' : '‚Ç¨';
        const formattedPrice = currentLanguage === 'uk' ? `${price} ${currencySymbol}` : `${price.toFixed(2)} ${currencySymbol}`;
        const li = document.createElement('li');
        li.innerHTML = `
            ${pizzaName} x${item.quantity} - ${formattedPrice}
            <div class="button-group">
                <button onclick="removeOnePizzaFromOrder(${index})">-1</button>
                <button onclick="removePizzaFromOrder(${index})">${translations[currentLanguage]['remove']}</button>
            </div>
        `;
        orderItems.appendChild(li);
    });

    const total = currentLanguage === 'uk' ? totalPrice : totalPrice / exchangeRate;
    const totalCurrencySymbol = currentLanguage === 'uk' ? '–≥—Ä–Ω' : '‚Ç¨';
    totalPriceElement.textContent = currentLanguage === 'uk' ? `${total} ${totalCurrencySymbol}` : `${total.toFixed(2)} ${totalCurrencySymbol}`;
    clearOrderButton.style.display = order.length > 0 ? 'block' : 'none';
}

function showOrderForm() {
    document.getElementById('orderForm').style.display = 'block';
}

async function placeOrder() {
    const name = document.getElementById('name').value;
    const address = document.getElementById('address').value;
    const notes = document.getElementById('notes').value;

    if (name && address && order.length > 0) {
        const orderSummary = {
            name: name,
            address: address,
            notes: notes || (currentLanguage === 'uk' ? "–ù–µ–º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–±–∞–∂–∞–Ω—å" : "No additional notes"),
            totalPrice: totalPrice,
            items: order,
        };

        try {
            const response = await fetch('http://localhost:3000/api/orders', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(orderSummary),
            });

            if (response.ok) {
                document.getElementById('deliveryMessage').style.display = 'block';
                order = [];
                totalPrice = 0;
                updateOrderList();
                document.getElementById('orderForm').style.display = 'none';
                document.getElementById('orderButton').style.display = 'none';
                document.getElementById('clearOrderButton').style.display = 'none';
            } else {
                alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.');
            }
        } catch (error) {
            console.error('–ü–æ–º–∏–ª–∫–∞:', error);
            alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.');
        }
    } else {
        alert(currentLanguage === 'uk' ? '–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –æ–±–æ–≤\'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è —Ç–∞ –¥–æ–¥–∞–π—Ç–µ –ø—ñ—Ü—É –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.' : 'Please fill in the required fields and add pizza to the order.');
    }
}

function updateOrderHistory() {
    const historyItems = document.getElementById('historyItems');
    historyItems.innerHTML = '';
    orderHistory.forEach((order, index) => {
        const li = document.createElement('li');
        li.innerHTML = `
            <strong>${currentLanguage === 'uk' ? '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è' : 'Order'} #${index + 1}</strong><br>
            ${currentLanguage === 'uk' ? '–Ü–º\'—è' : 'Name'}: ${order.name}<br>
            ${currentLanguage === 'uk' ? '–ê–¥—Ä–µ—Å–∞' : 'Address'}: ${order.address}<br>
            ${currentLanguage === 'uk' ? '–ü–æ–±–∞–∂–∞–Ω–Ω—è' : 'Notes'}: ${order.notes}<br>
            ${currentLanguage === 'uk' ? '–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è' : 'Order'}: ${order.order.map(item => `${item.name} x${item.quantity} - ${item.price * item.quantity} ${currentLanguage === 'uk' ? '–≥—Ä–Ω' : '‚Ç¨'}`).join(', ')}<br>
            ${currentLanguage === 'uk' ? '–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞' : 'Total'}: ${order.totalPrice} ${currentLanguage === 'uk' ? '–≥—Ä–Ω' : '‚Ç¨'}<br>
            ${currentLanguage === 'uk' ? '–î–∞—Ç–∞' : 'Date'}: ${order.date}
        `;
        historyItems.appendChild(li);
    });
}

function ratePizza(element, rating, event) {
    event.stopPropagation();
    const stars = element.parentElement.querySelectorAll('span');
    stars.forEach((star, index) => {
        if (index < rating) {
            star.classList.add('active');
        } else {
            star.classList.remove('active');
        }
    });
    alert(currentLanguage === 'uk' ? `–í–∏ –æ—Ü—ñ–Ω–∏–ª–∏ –ø—ñ—Ü—É –Ω–∞ ${rating} –∑—ñ—Ä–æ–∫!` : `You rated the pizza ${rating} stars!`);
}

updateOrderHistory();
renderPizzas(pizzas);
